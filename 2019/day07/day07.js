const input = '3,8,1001,8,10,8,105,1,0,0,21,42,67,84,109,126,207,288,369,450,99999,3,9,102,4,9,9,1001,9,4,9,102,2,9,9,101,2,9,9,4,9,99,3,9,1001,9,5,9,1002,9,5,9,1001,9,5,9,1002,9,5,9,101,5,9,9,4,9,99,3,9,101,5,9,9,1002,9,3,9,1001,9,2,9,4,9,99,3,9,1001,9,2,9,102,4,9,9,101,2,9,9,102,4,9,9,1001,9,2,9,4,9,99,3,9,102,2,9,9,101,5,9,9,1002,9,2,9,4,9,99,3,9,1002,9,2,9,4,9,3,9,1002,9,2,9,4,9,3,9,1002,9,2,9,4,9,3,9,101,2,9,9,4,9,3,9,101,2,9,9,4,9,3,9,1001,9,2,9,4,9,3,9,101,2,9,9,4,9,3,9,1001,9,2,9,4,9,3,9,1002,9,2,9,4,9,3,9,1001,9,1,9,4,9,99,3,9,1001,9,2,9,4,9,3,9,1002,9,2,9,4,9,3,9,1002,9,2,9,4,9,3,9,1001,9,2,9,4,9,3,9,102,2,9,9,4,9,3,9,102,2,9,9,4,9,3,9,1001,9,2,9,4,9,3,9,102,2,9,9,4,9,3,9,1002,9,2,9,4,9,3,9,102,2,9,9,4,9,99,3,9,102,2,9,9,4,9,3,9,1001,9,1,9,4,9,3,9,101,1,9,9,4,9,3,9,101,1,9,9,4,9,3,9,1002,9,2,9,4,9,3,9,102,2,9,9,4,9,3,9,101,2,9,9,4,9,3,9,101,1,9,9,4,9,3,9,101,1,9,9,4,9,3,9,101,2,9,9,4,9,99,3,9,1001,9,2,9,4,9,3,9,101,1,9,9,4,9,3,9,101,2,9,9,4,9,3,9,1001,9,1,9,4,9,3,9,1001,9,2,9,4,9,3,9,1001,9,1,9,4,9,3,9,101,1,9,9,4,9,3,9,102,2,9,9,4,9,3,9,102,2,9,9,4,9,3,9,101,1,9,9,4,9,99,3,9,102,2,9,9,4,9,3,9,1001,9,1,9,4,9,3,9,101,2,9,9,4,9,3,9,1002,9,2,9,4,9,3,9,102,2,9,9,4,9,3,9,1001,9,1,9,4,9,3,9,1002,9,2,9,4,9,3,9,101,1,9,9,4,9,3,9,102,2,9,9,4,9,3,9,1001,9,2,9,4,9,99';
const test1 = '3,15,3,16,1002,16,10,16,1,16,15,15,4,15,99,0,0';
const test2 = '3,23,3,24,1002,24,10,24,1002,23,-1,23,101,5,23,23,1,24,23,23,4,23,99,0,0';
const test3 = '3,31,3,32,1002,32,10,32,1001,31,-2,31,1007,31,0,33,1002,33,7,33,1,33,31,31,1,32,31,31,4,31,99,0,0,0';

var max = 0;
const IntCode = require('../intcode');

for (var p1 = 0; p1 < 5; p1++) {
    for (var p2 = 0; p2 < 5; p2++) {
        if (p2 === p1) {
            continue;
        }
        for (var p3 = 0; p3 < 5; p3++) {
            if (p3 === p1 || p3 === p2) {
                continue;
            }
            for (var p4 = 0; p4 < 5; p4++) {
                if (p4 === p1 || p4 === p2 || p4 === p3) {
                    continue;
                }
                for (var p5 = 0; p5 < 5; p5++) {
                    if (p5 === p1 || p5 === p2 || p5 === p3 || p5 === p4) {
                        continue;
                    }
                    var phases = [p1, p2, p3, p4, p5];
                    var amplifiers = [];

                    for (var i = 0; i < 5; i++) {
                        const turn = i;
                        const intCode = new IntCode((value) => {
                            if (turn === 4) {
                                max = Math.max(max, value);
                            } else {
                                amplifiers[turn + 1].input(value);
                            }
                        });
                        intCode.setMemory(input.split(',').map(num => parseInt(num, 10)));
                        intCode.execute();
                        amplifiers.push(intCode);
                    }
                    amplifiers[0].input(phases[0]);
                    amplifiers[1].input(phases[1]);
                    amplifiers[2].input(phases[2]);
                    amplifiers[3].input(phases[3]);
                    amplifiers[4].input(phases[4]);
                    amplifiers[0].input(0);
                }
            }
        }
    }
}
console.log(max);

